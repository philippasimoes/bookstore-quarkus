quarkus.http.port=10001

# configure your datasource
quarkus.datasource.db-kind = postgresql
quarkus.datasource.username = postgres
quarkus.datasource.password = postgres
quarkus.datasource.jdbc.url = jdbc:postgresql://172.25.141.121:5432/stockservice

# drop and create the database at startup (use `update` to only update the schema)
quarkus.hibernate-orm.database.generation = drop-and-create
quarkus.flyway.default-schema=stockservice
quarkus.flyway.migrate-at-start=true

#quarkus.hibernate-orm.log.sql=true
#quarkus.hibernate-orm.log.jdbc-warnings=true

#com.bookstore.stock_service.web.controller.BookResourceClient/mp-rest/url=http://catalog-service:10000/api
com.bookstore.stock_service.web.controller.BookResourceClient/mp-rest/scope=jakarta.enterprise.context.ApplicationScoped

quarkus.log.file.enable=true
quarkus.log.file.path=log/stock-service.log
quarkus.log.file.format=%d{yyyy-MM-dd HH:mm:ss} %-5p [%c] (%t) %s%e%n

quarkus.stork.catalog-service.service-discovery.type=consul
quarkus.stork.catalog-service.service-discovery.consul-host=consul
quarkus.stork.catalog-service.service-discovery.consul-port=8500
quarkus.stork.catalog-service.load-balancer.type=round-robin

%dev.consul.host=consul
%dev.quarkus.stork.catalog-service.service-discovery.consul-host=172.25.141.121:consul

consul.host=consul
consul.port=8500
environment=stock-service
quarkus.application.name=stock-service
quarkus.application.version=0.0.1-SNAPSHOT


%prod.kafka.bootstrap.servers=kafka:9094
%dev.kafka.bootstrap.servers=172.25.141.121:9092
mp.messaging.outgoing.available-out.connector=smallrye-kafka
mp.messaging.outgoing.available-out.topic=available
mp.messaging.outgoing.available-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

mp.messaging.outgoing.soldout-out.connector=smallrye-kafka
mp.messaging.outgoing.soldout-out.topic=soldout
mp.messaging.outgoing.soldout-out.value.serializer=org.apache.kafka.common.serialization.StringSerializer

